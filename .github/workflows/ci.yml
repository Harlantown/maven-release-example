name: build

on: [ push, pull_request ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: export secrets
        run: |
          export GITHUB_TOKEN=${{ secrets.GH_TOKEN }}
          export OSSRH_JIRA_USERNAME=${{ secrets.OSSRH_JIRA_USERNAME }}
          export OSSRH_JIRA_PASSWORD=${{ secrets.OSSRH_JIRA_PASSWORD }}
#          export GPG_KEY_NAME=${{ secrets.GPG_KEY_NAME }}
#          export GPG_PASSPHRASE=${{ secrets.GPG_PASSPHRASE }}

          
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_KEY_NAME }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          
      - name: List keys
        run: gpg -K
        
      - uses: shaowenchen/debugger-action@v1
        name: debugger
        timeout-minutes: 30
        continue-on-error: true
        with:
          frp_server_addr: ${{ secrets.FRP_SERVER_ADDR }}
          frp_server_port: ${{ secrets.FRP_SERVER_PORT }}
          frp_token: ${{ secrets.FRP_TOKEN }}
          ssh_port: 29001
          
      - name: test
        run: |
          echo "test1"
          echo ${{ secrets.GH_TOKEN }}
          echo "test2"
          echo "test3"
          echo ${{ secrets.GPG_PASSPHRASE }}
          echo "test4"
          echo ${{ secrets.OSSRH_JIRA_USERNAME }}
          echo "test5"
          echo ${{ secrets.OSSRH_JIRA_PASSWORD }}
          echo "test6"
          
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          server-id: ossrh
          server-username: OSSRH_JIRA_USERNAME
          server-password: OSSRH_JIRA_PASSWORD
          gpg-private-key: ${{ secrets.GPG_KEY_NAME }}
          gpg-passphrase: GPG_PASSPHRASE

      - name: Build with Maven
        run: mvn clean test

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Sematic Release
        run: |
          npm install -g @conveyal/maven-semantic-release semantic-release
          semantic-release --prepare @conveyal/maven-semantic-release --publish @semantic-release/github,@conveyal/maven-semantic-release --verify-conditions @semantic-release/github,@conveyal/maven-semantic-release --verify-release @conveyal/maven-semantic-release

        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GPG_KEY_NAME: ${{ secrets.GPG_KEY_NAME }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          OSSRH_JIRA_USERNAME: ${{ secrets.OSSRH_JIRA_USERNAME }}
          OSSRH_JIRA_PASSWORD: ${{ secrets.OSSRH_JIRA_PASSWORD }}
          
      - run: |
          echo GITHUB_TOKEN
          echo GPG_KEY_NAME
          echo GPG_PASSPHRASE
          echo OSSRH_JIRA_USERNAME
          echo OSSRH_JIRA_PASSWORD
      - run: |
          echo ${OSSRH_JIRA_USERNAME}
          echo ${OSSRH_JIRA_PASSWORD}
          echo ${GPG_KEY_NAME}
          echo ${GPG_PASSPHRASE}
